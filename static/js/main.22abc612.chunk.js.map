{"version":3,"sources":["components/sleep.gif","components/walking.gif","components/heartrate.gif","components/Dashboard.js","components/Psychologist.jpg","components/Psychologist.js","components/Sidebar.js","components/Footer.js","App.js","index.js"],"names":["Dash","handle","useParams","url","require","value","console","log","date","heartRate","footSteps","sleep","i","length","Date","Hours","unshift","lastS","lastSleep","lastSt","lastH","style","textAlign","color","className","height","width","paddingLeft","marginLeft","marginRight","fontSize","rowData","columnDefs","headerName","field","backgroundColor","defaultColDef","flex","filter","floatingFilter","sortable","pagination","paginationPageSize","CardGroup","border","Card","Img","variant","src","walking","Text","fontWeight","bed","heartrate","padding","justifyContent","float","data","labels","datasets","label","borderColor","borderWidth","lineTension","fill","Psychologist","url1","clasname","fontStyle","fontFamily","photo","Badge","cellRenderer","params","linkData","id","headingCell","Component","headerSheet","subSheet","NavBar","Navbar","collapseOnSelect","expand","bg","Brand","href","Toggle","aria-controls","Collapse","Nav","Link","Footer","App","path","Dashboard","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.22abc612.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/sleep.630986d7.gif\";","export default __webpack_public_path__ + \"static/media/walking.f8c7f16d.gif\";","export default __webpack_public_path__ + \"static/media/heartrate.fa2edc70.gif\";","import React from \"react\";\r\nimport { AgGridReact } from \"ag-grid-react\";\r\nimport { Line, Bar, Doughnut } from \"react-chartjs-2\";\r\nimport \"./Dash.css\";\r\nimport \"ag-grid-community/dist/styles/ag-grid.css\";\r\nimport \"ag-grid-community/dist/styles/ag-theme-alpine.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Card, CardGroup } from \"react-bootstrap\";\r\nimport bed from \"./sleep.gif\";\r\nimport walking from \"./walking.gif\";\r\nimport heartrate from \"./heartrate.gif\";\r\nimport { useParams } from \"react-router-dom\";\r\nconst Dash = () => {\r\n  let { handle } = useParams();\r\n  //column with all 3 parameter\r\n  const columns = [\r\n    {\r\n      headerName: \"Date(DD-MM-YYYY)\",\r\n      field: \"Date\",\r\n      backgroundColor: \"lightpink\",\r\n    },\r\n    { headerName: \"Sleep(in hours)\", field: \"Hours\" },\r\n    { headerName: \"Step Count\", field: \"Steps\" },\r\n    { headerName: \"Heart Rate(BPM)\", field: \"heart_rate_bpm\" },\r\n  ];\r\n  //user information\r\n  if (handle == 10) var url = require(\"./tejus.json\");\r\n  else if (handle == 2) var url = require(\"./adi.json\");\r\n  else if (handle == 3) var url = require(\"./bala.json\");\r\n  else if (handle == 4) var url = require(\"./niki.json\");\r\n  else if (handle == 5) var url = require(\"./sahil.json\");\r\n  else if (handle == 6) var url = require(\"./yash.json\");\r\n  else if (handle == 7) var url = require(\"./priya.json\");\r\n  else if (handle == 8) var url = require(\"./sahil.json\");\r\n  else if (handle == 9) var url = require(\"./yash.json\");\r\n  else if (handle == 1) var url = require(\"./fakedata.json\");\r\n\r\n  //.console.log(url)\r\n  let value = handle;\r\n  console.log(value);\r\n  const defaultColDef = {\r\n    flex: 1,\r\n    filter: true,\r\n    floatingFilter: true,\r\n    sortable: true,\r\n  };\r\n\r\n  //graph details\r\n  const date = [];\r\n  const heartRate = [];\r\n  const footSteps = [];\r\n  const sleep = [];\r\n  for (var i = 0; i < url.length; i++) {\r\n    date[i] = url[i].Date;\r\n    heartRate[i] = url[i][\"heart_rate_bpm\"];\r\n    footSteps[i] = url[i][\"Steps\"];\r\n    sleep[i] = url[i].Hours;\r\n  }\r\n\r\n  //Graph first value set to 0\r\n  date.unshift(0);\r\n  heartRate.unshift(0);\r\n\r\n  //latest sleep readings\r\n  const lastS = sleep[sleep.length - 1];\r\n  const lastSleep = `${lastS}`;\r\n\r\n  //latest step readings\r\n  const lastSt = footSteps[footSteps.length - 1];\r\n\r\n  //console.log(lastSteps);\r\n\r\n  const lastH = heartRate[heartRate.length - 1];\r\n\r\n  //* * * * *\r\n\r\n  //lastest date readings\r\n  const lastDate = [date[date.length - 1]];\r\n\r\n  // pie  showing  sleep reading from 24h\r\n  const lastSleepPieData = [lastSleep, 24 - lastSleep];\r\n\r\n  return (\r\n    <div>\r\n      <br />\r\n      <h1\r\n        style={{\r\n          textAlign: \"center\",\r\n          color: \"lightcoral\",\r\n        }}\r\n      >\r\n        {/* <h2> ID : {id}</h2> */}\r\n        User {handle} Profile\r\n      </h1>\r\n      <br />\r\n      <div className=\"flex-container\">\r\n        <br />\r\n\r\n        {/* Ag grid react starts*/}\r\n        <div\r\n          className=\"ag-theme-alpine\"\r\n          style={{\r\n            // justifyContent: \"center\",\r\n            height: \"650px\",\r\n            width: \"70%\",\r\n            paddingLeft: \"10px\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n            color: \"black\",\r\n            fontSize: \"19px\",\r\n          }}\r\n        >\r\n          <AgGridReact\r\n            rowData={url}\r\n            columnDefs={columns}\r\n            defaultColDef={defaultColDef}\r\n            pagination={true}\r\n            paginationPageSize={10} //shows only 10 records at a time\r\n          />\r\n        </div>\r\n        {/* Ag grid react ends */}\r\n        <br />\r\n        <br />\r\n        {/* widget start */}\r\n        <div className=\"cardgroup\">\r\n          <CardGroup\r\n            className=\"mb-2\"\r\n            style={{\r\n              //   justifyContent: \"left\",\r\n              marginLeft: \"auto\",\r\n              marginRight: \"auto\",\r\n              height: \"3rem\",\r\n              width: \"13rem\",\r\n              border: \"info\",\r\n              //border: \"10px\",\r\n            }}\r\n          >\r\n            <Card className=\"rounded border border-4 border border-white \">\r\n              <Card.Img\r\n                variant=\"top\"\r\n                src={walking}\r\n                style={{\r\n                  marginLeft: \"auto\",\r\n                  marginRight: \"auto\",\r\n                  height: \"80%\",\r\n                }}\r\n              />\r\n              <Card.Text style={{ color: \"blueviolet\", fontWeight: \"bold\" }}>\r\n                Number of steps {lastSt}\r\n              </Card.Text>\r\n\r\n              <Card.Img\r\n                variant=\"top\"\r\n                src={bed}\r\n                style={{\r\n                  marginLeft: \"auto\",\r\n                  marginRight: \"auto\",\r\n                  height: \"80%\",\r\n                }}\r\n              />\r\n              <Card.Text style={{ color: \"blueviolet\", fontWeight: \"bold\" }}>\r\n                Time in bed {lastSleep} h{\" \"}\r\n              </Card.Text>\r\n              <Card.Img\r\n                variant=\"top\"\r\n                src={heartrate}\r\n                style={{\r\n                  marginLeft: \"auto\",\r\n                  marginRight: \"auto\",\r\n                  height: \"80%\",\r\n                  width: \"80%\",\r\n                  padding: \"30px\",\r\n                }}\r\n              />\r\n              <Card.Text style={{ color: \"blueviolet\", fontWeight: \"bold\" }}>\r\n                Latest Heart rate {lastH} BPM\r\n              </Card.Text>\r\n            </Card>\r\n          </CardGroup>\r\n        </div>\r\n        <br />\r\n        {/* widget end */}\r\n        <br />\r\n      </div>\r\n      <br />\r\n      <br />\r\n      <br /> <br /> <br />\r\n      <div className=\"graphs\">\r\n        <div\r\n          style={{\r\n            justifyContent: \"left\",\r\n            float: \"left\",\r\n            height: \"50%\",\r\n            width: \"50%\",\r\n            // height:\"60%\",\r\n            //width:\"75%\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n            fontSize: \"19px\",\r\n            padding: 0,\r\n          }}\r\n        >\r\n          <Line\r\n            data={{\r\n              labels: date,\r\n              datasets: [\r\n                {\r\n                  label: \"Foot steps\",\r\n                  data: footSteps,\r\n                  borderColor: \"rgb(243, 144, 238)\",\r\n                  backgroundColor: \"black\",\r\n                  borderWidth: 2,\r\n                  lineTension: 0.4,\r\n                },\r\n              ],\r\n            }}\r\n          />\r\n        </div>\r\n        <div\r\n          className=\"line 2\"\r\n          style={{\r\n            justifyContent: \"left\",\r\n            float: \"left\",\r\n\r\n            height: \"50%\",\r\n            width: \"50%\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n            // paddingRight: \"9px\",\r\n            fontSize: \"19px\",\r\n          }}\r\n        >\r\n          {/* <Doughnut\r\n            data={{\r\n              labels: lastDate,\r\n              datasets: [\r\n                {\r\n                  data: lastSleepPieData,\r\n                  borderWidth: 2,\r\n                  backgroundColor: [\"#B21F00\", \"#C9DE00\"],\r\n                  hoverBackgroundColor: [\"#501800\", \"#4B5000\"],\r\n                },\r\n              ],\r\n            }}\r\n          /> */}\r\n          <Bar\r\n            data={{\r\n              labels: date,\r\n              datasets: [\r\n                {\r\n                  label: \"Sleep\",\r\n                  data: sleep,\r\n                  borderColor: \"rgb(26, 18, 73)\",\r\n                  backgroundColor: \"rgb(241, 127, 33)\",\r\n                  borderWidth: 2,\r\n                },\r\n              ],\r\n            }}\r\n          />\r\n          <br />\r\n          <p> Heart rate (count/min) </p>\r\n        </div>\r\n\r\n        <div\r\n          className=\"line 2\"\r\n          style={{\r\n            // justifyContent: \"right\",\r\n            // float: \"left\",\r\n            height: \"30%\",\r\n            width: \"60%\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n            fontSize: \"19px\",\r\n            //paddingRight: \"10px\",\r\n          }}\r\n        >\r\n          <Line\r\n            data={{\r\n              labels: date,\r\n              datasets: [\r\n                {\r\n                  label: \"Hear Rate\",\r\n\r\n                  data: heartRate,\r\n                  // borderColor: \"rgb(255,51,51)\",\r\n                  //  backgroundColor: \"rgb(255,102,102)\",\r\n\r\n                  borderColor: \"rgb(144, 220, 243)\",\r\n                  //backgroundColor: \"rgb(144, 220, 243)\",\r\n                  backgroundColor: \" rgb(213, 240, 248)\",\r\n                  fill: false,\r\n                  //  tension: 0.1,\r\n                  // pointBackgroundColor: \"rgb(255,0,0)\",\r\n                  //  pointBorderWidth: 0.1,\r\n                  borderWidth: 3,\r\n                  lineTension: 0.3,\r\n                },\r\n              ],\r\n            }}\r\n          />\r\n        </div>\r\n        <br />\r\n      </div>\r\n      <br />\r\n      <br />\r\n    </div>\r\n    //--------\r\n  );\r\n};\r\n\r\nexport default Dash;\r\n","export default __webpack_public_path__ + \"static/media/Psychologist.40a07aa5.jpg\";","import React from \"react\";\r\nimport { AgGridReact } from \"ag-grid-react\";\r\nimport { Component } from \"react\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport photo from \"./Psychologist.jpg\";\r\nimport \"../App.css\";\r\nimport \"ag-grid-community/dist/styles/ag-grid.css\";\r\nimport \"ag-grid-community/dist/styles/ag-theme-alpine.css\";\r\nimport Badge from \"react-bootstrap/Badge\";\r\n\r\nclass Psychologist extends Component {\r\n  render() {\r\n    //all users list\r\n    const columns = [\r\n      {\r\n        headerName: \"Id\",\r\n        field: \"id\",\r\n        cellRenderer: function (params) {\r\n          //for creating Symbol hyperlink\r\n          let linkData = params.data.id;\r\n          let linkedPage = `<a href= http://localhost:3001/dashboard/${linkData} target=\"_blank\"> ${linkData}</a>`;\r\n          return linkedPage;\r\n        },\r\n      },\r\n      { headerName: \"Name\", field: \"name\" },\r\n      { headerName: \"Age group\", field: \"age-Group\" },\r\n      { headerName: \"Gender\", field: \"gender\" },\r\n      { headerName: \"Email\", field: \"email\" },\r\n      {\r\n        headerName: \"Phone\",\r\n        field: \"phone\",\r\n        headingCell: { color: \"darkblue\", \"background-color\": \"white\" },\r\n      },\r\n      { headerName: \"Body Type\", field: \"body_type\" },\r\n    ];\r\n\r\n    //data in users\r\n    var url1 = require(\"./user.json\");\r\n    console.log(url1.length);\r\n\r\n    //graph in table starts //\r\n    // var url = require(\"./fakedata.json\");\r\n    // const heartRate = [];\r\n    // const footSteps = [];\r\n    // const sleep = [];\r\n    // for (var i = 0; i < url.length; i++) {\r\n    //   heartRate[i] = url[i][\"Heart Rate\"];\r\n    //   footSteps[i] = url[i][\"Step Count\"];\r\n    //   sleep[i] = url[i].Sleep;\r\n    // }\r\n    // function graphHeart() {\r\n    //   url1[0][\"Heart Rate\"] = heartRate;\r\n    //   url1[0][\"Step Count\"] = footSteps;\r\n    //   url1[0][\"Sleep\"] = sleep;\r\n    //   console.log(url1[0]);\r\n    // }\r\n    // graphHeart();\r\n\r\n    //ag grid features\r\n    const defaultColDef = {\r\n      flex: 1,\r\n      filter: true,\r\n      floatingFilter: true,\r\n      sortable: true,\r\n    };\r\n\r\n    return (\r\n      <div className=\"main\">\r\n        <br />\r\n\r\n        {/* card on top */}\r\n        <div clasname=\"card3\" style={{ justifyContent: \"center\" }}>\r\n          <Card style={{ borderColor: \"white\" }}>\r\n            <Card.Text\r\n              style={{\r\n                fontStyle: \"italic\",\r\n                fontWeight: \"bolder\",\r\n                fontSize: \"40px\",\r\n                color: \"lightcoral\",\r\n                fontFamily: \"Caveat\",\r\n              }}\r\n            >\r\n              Welcome Mr Greg!\r\n              <Card.Img\r\n                variant=\"top\"\r\n                src={photo}\r\n                style={{\r\n                  // marginLeft: \"auto\",\r\n                  // marginRight: \"auto\",\r\n                  height: \"20%\",\r\n                  width: \"20%\",\r\n                  justifyContent: \"right\",\r\n                }}\r\n              />\r\n            </Card.Text>\r\n          </Card>\r\n          <br />\r\n        </div>\r\n        <br />\r\n        <br />\r\n        {/* table  */}\r\n        <div className=\"container\">\r\n          <h2\r\n            style={{\r\n              fontFamily: \"arial\",\r\n              padding: \"21px\",\r\n              fontWeight: \"bold\",\r\n              textAlign: \"center\",\r\n              fontSize: 37,\r\n              color: \"lightcoral\",\r\n            }}\r\n          >\r\n            User Information\r\n          </h2>\r\n          <p>\r\n            <Badge color=\"success\"> {url1.length} </Badge>numbers of clients\r\n          </p>\r\n          <div\r\n            className=\"ag-theme-alpine\"\r\n            style={{\r\n              justifyContent: \"center\",\r\n              height: \"700px\",\r\n              width: \"1000px\",\r\n              marginLeft: \"auto\",\r\n              marginRight: \"auto\",\r\n              fontSize: \"19px\",\r\n              marginLeft: \"auto\",\r\n              marginRight: \"auto\",\r\n            }}\r\n          >\r\n            <AgGridReact\r\n              rowData={url1}\r\n              columnDefs={columns}\r\n              defaultColDef={defaultColDef}\r\n              pagination={true}\r\n              paginationPageSize={10} //shows only 10 records at a time\r\n            />\r\n            <br />\r\n            <br />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Psychologist;\r\n","import React from \"react\";\r\nimport { Navbar, Nav } from \"react-bootstrap\";\r\n\r\n// css for heading\r\nconst headerSheet = {\r\n  fontFamily: \"Arial\",\r\n  fontWeight: \"bold\",\r\n  fontSize: \"32px\",\r\n};\r\n\r\n// css for navbar links\r\nconst subSheet = {\r\n  fontWeight: \"bold\",\r\n  fontSize: \"22px\",\r\n  fontFamily: \"Arial\",\r\n};\r\n\r\nfunction NavBar() {\r\n  return (\r\n    <div>\r\n      <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n        <Navbar.Brand href=\"/\">\r\n          <div style={headerSheet}>Mental Health Dashboard</div>\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n          <Nav className=\"ml-auto\" style={subSheet}>\r\n            {/* <Nav.Link href=\"/\">Home</Nav.Link> */}\r\n            <Nav.Link href=\"/psychologist\">Psycho</Nav.Link>\r\n            <Nav.Link href=\"/dashboard\">User check </Nav.Link>\r\n\r\n            {/* <Nav.Link href=\"/pricehistory\">PriceHistory</Nav.Link> */}\r\n\r\n            {/* <Nav.Link href=\"/quote\">Quote</Nav.Link> */}\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NavBar;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Footer extends Component {\r\n  render() {\r\n    return (\r\n      <footer className=\"footer\">\r\n        <div className=\"container-fluid\">\r\n          <nav>\r\n            {/* <ul className=\"footer-menu\">\r\n              <li>\r\n                <Link to=\"/\">Home</Link>\r\n              </li>\r\n            </ul> */}\r\n            <p className=\"copyright text-center\">©️ 2019</p>\r\n          </nav>\r\n        </div>\r\n      </footer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Footer;\r\n","import \"./App.css\";\nimport React, { Component } from \"react\";\n//import Dashboard from \"./others/Dashboard\";\nimport Dashboard from \"./components/Dashboard\";\nimport Psychologist from \"./components/Psychologist\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport SideNav from \"./components/Sidebar\";\n\nimport Footer from \"./components/Footer\";\n//import NameForm from \"./components/notes\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"wrapper\">\n        <Router>\n          <SideNav />\n          <Route path=\"/dashboard/:handle\">\n            <Dashboard />\n          </Route>\n          <Route path=\"/psychologist\">\n            <Psychologist />\n          </Route>\n          <Footer />\n          {/* <Route path=\"/feedback\">\n            <NameForm />\n          </Route> */}\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <div>\n    <App />\n  </div>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}